// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mantenimiento_api.Models;

#nullable disable

namespace mantenimientoapi.Migrations
{
    [DbContext(typeof(MantenimientoApiContext))]
    partial class MantenimientoApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("mantenimiento_api.Models.Observation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<int>("IdWorkOrder")
                        .HasColumnType("int");

                    b.Property<string>("Msj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Observations_Id");

                    b.HasIndex("IdUser");

                    b.HasIndex("IdWorkOrder");

                    b.ToTable("Observations");
                });

            modelBuilder.Entity("mantenimiento_api.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id")
                        .HasName("PK_Permissions_Id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("mantenimiento_api.Models.Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Cover")
                        .HasColumnType("bit");

                    b.Property<int>("IdWorkOrder")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Pictures_Id");

                    b.HasIndex("IdWorkOrder");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("mantenimiento_api.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id")
                        .HasName("PK_Rols_Id");

                    b.ToTable("Rols");
                });

            modelBuilder.Entity("mantenimiento_api.Models.RolsViewsPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<int>("IdViewPermission")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_RolsPermissions_Id");

                    b.HasIndex("IdRol");

                    b.HasIndex("IdViewPermission");

                    b.ToTable("RolsViewsPermissions");
                });

            modelBuilder.Entity("mantenimiento_api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id")
                        .HasName("PK_Users_Id");

                    b.HasIndex("IdRol");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("mantenimiento_api.Models.View", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id")
                        .HasName("PK_Views_Id");

                    b.ToTable("Views");
                });

            modelBuilder.Entity("mantenimiento_api.Models.ViewsPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdPermission")
                        .HasColumnType("int");

                    b.Property<int>("IdView")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_ViewsPermissions_Id");

                    b.HasIndex("IdPermission");

                    b.HasIndex("IdView");

                    b.ToTable("ViewsPermissions");
                });

            modelBuilder.Entity("mantenimiento_api.Models.WorkOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdUserAsigned")
                        .HasColumnType("int");

                    b.Property<int>("IdUserCreator")
                        .HasColumnType("int");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_WorkOrders_Id");

                    b.HasIndex("IdUserAsigned");

                    b.HasIndex("IdUserCreator");

                    b.ToTable("WorkOrders");
                });

            modelBuilder.Entity("mantenimiento_api.Models.Observation", b =>
                {
                    b.HasOne("mantenimiento_api.Models.User", "IdUserNavigation")
                        .WithMany("Observations")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK_Observations_IdUser");

                    b.HasOne("mantenimiento_api.Models.WorkOrder", "IdWorkOrderNavigation")
                        .WithMany("Observations")
                        .HasForeignKey("IdWorkOrder")
                        .IsRequired()
                        .HasConstraintName("FK_Observations_IdWorkOrder");

                    b.Navigation("IdUserNavigation");

                    b.Navigation("IdWorkOrderNavigation");
                });

            modelBuilder.Entity("mantenimiento_api.Models.Picture", b =>
                {
                    b.HasOne("mantenimiento_api.Models.WorkOrder", "IdWorkOrderNavigation")
                        .WithMany("Pictures")
                        .HasForeignKey("IdWorkOrder")
                        .IsRequired()
                        .HasConstraintName("FK_Pictures_IdWorkOrder");

                    b.Navigation("IdWorkOrderNavigation");
                });

            modelBuilder.Entity("mantenimiento_api.Models.RolsViewsPermission", b =>
                {
                    b.HasOne("mantenimiento_api.Models.Rol", "IdRolNavigation")
                        .WithMany("RolsViewsPermissions")
                        .HasForeignKey("IdRol")
                        .IsRequired()
                        .HasConstraintName("FK_RolsPermissions_IdRol");

                    b.HasOne("mantenimiento_api.Models.ViewsPermission", "IdViewPermissionNavigation")
                        .WithMany("RolsViewsPermissions")
                        .HasForeignKey("IdViewPermission")
                        .IsRequired()
                        .HasConstraintName("FK_RolsPermissions_IdViewPermission");

                    b.Navigation("IdRolNavigation");

                    b.Navigation("IdViewPermissionNavigation");
                });

            modelBuilder.Entity("mantenimiento_api.Models.User", b =>
                {
                    b.HasOne("mantenimiento_api.Models.Rol", "IdRolNavigation")
                        .WithMany("Users")
                        .HasForeignKey("IdRol")
                        .IsRequired()
                        .HasConstraintName("FK_Users_IdRol");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("mantenimiento_api.Models.ViewsPermission", b =>
                {
                    b.HasOne("mantenimiento_api.Models.Permission", "IdPermissionNavigation")
                        .WithMany("ViewsPermissions")
                        .HasForeignKey("IdPermission")
                        .IsRequired()
                        .HasConstraintName("FK_ViewsPermissions_IdPermission");

                    b.HasOne("mantenimiento_api.Models.View", "IdViewNavigation")
                        .WithMany("ViewsPermissions")
                        .HasForeignKey("IdView")
                        .IsRequired()
                        .HasConstraintName("FK_ViewsPermissions_IdView");

                    b.Navigation("IdPermissionNavigation");

                    b.Navigation("IdViewNavigation");
                });

            modelBuilder.Entity("mantenimiento_api.Models.WorkOrder", b =>
                {
                    b.HasOne("mantenimiento_api.Models.User", "IdUserAsignedNavigation")
                        .WithMany("WorkOrderIdUserAsignedNavigations")
                        .HasForeignKey("IdUserAsigned")
                        .HasConstraintName("FK_WorkOrders_IdUserAsigned");

                    b.HasOne("mantenimiento_api.Models.User", "IdUserCreatorNavigation")
                        .WithMany("WorkOrderIdUserCreatorNavigations")
                        .HasForeignKey("IdUserCreator")
                        .IsRequired()
                        .HasConstraintName("FK_WorkOrders_IdUserCreator");

                    b.Navigation("IdUserAsignedNavigation");

                    b.Navigation("IdUserCreatorNavigation");
                });

            modelBuilder.Entity("mantenimiento_api.Models.Permission", b =>
                {
                    b.Navigation("ViewsPermissions");
                });

            modelBuilder.Entity("mantenimiento_api.Models.Rol", b =>
                {
                    b.Navigation("RolsViewsPermissions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("mantenimiento_api.Models.User", b =>
                {
                    b.Navigation("Observations");

                    b.Navigation("WorkOrderIdUserAsignedNavigations");

                    b.Navigation("WorkOrderIdUserCreatorNavigations");
                });

            modelBuilder.Entity("mantenimiento_api.Models.View", b =>
                {
                    b.Navigation("ViewsPermissions");
                });

            modelBuilder.Entity("mantenimiento_api.Models.ViewsPermission", b =>
                {
                    b.Navigation("RolsViewsPermissions");
                });

            modelBuilder.Entity("mantenimiento_api.Models.WorkOrder", b =>
                {
                    b.Navigation("Observations");

                    b.Navigation("Pictures");
                });
#pragma warning restore 612, 618
        }
    }
}
